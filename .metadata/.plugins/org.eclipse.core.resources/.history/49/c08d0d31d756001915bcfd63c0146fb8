package com.jawwy.modules;


import static org.testng.Assert.assertEquals;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import org.testng.annotations.Parameters;


import com.jawwy.util.CommonUtilities;
import com.jawwy.util.ExcelUtilities;
import com.jawwy.util.Log;
import com.jawwy.util.Constant;
import com.jawwy.util.DataBaseUtilities;

import org.apache.log4j.xml.DOMConfigurator;
import org.junit.Assert;

import com.jawwy.pageobject.ADM_Portal_HomePage;;



public class Jawwy_ADM_Portal {

	private WebDriver driver;
	private CommonUtilities utilities;
	private DataBaseUtilities dbutilities;
	private WebDriverWait wait;
	private String sTestCaseName;
	private int iTestCaseRow;
	ArrayList moduleRecord=null;


	@BeforeTest
	@Parameters("browsername")
	public void setUp(String browsername) throws Exception{

		//Log4j configuration settings
		DOMConfigurator.configure("log4j.xml");
		Log.info("Log4j initiated");

		System.out.println("Executing in browser: "+browsername);

		if(browsername.equalsIgnoreCase("Firefox"))
		{   
			System.setProperty("webdriver.gecko.driver", "C:\\Jawwy_Repo\\Jawwy_Automation\\geckodriver.exe");
			System.setProperty("webdriver.firefox.bin", "C:\\FirefoxPortable45ESR\\FirefoxPortable.exe");
			driver= new FirefoxDriver();
		}		

		if(browsername.equalsIgnoreCase("Chrome"))	
		{
			System.setProperty("webdriver.chrome.driver", "C:\\Jawwy_Repo\\Jawwy_Automation\\chromedriver.exe");
			driver = new ChromeDriver();
		}

		if(browsername.equalsIgnoreCase("IE"))	
		{
			System.setProperty("webdriver.ie.driver", "C:\\Jawwy_Repo\\Jawwy_Automation\\IEDriverServer.exe");
			driver = new InternetExplorerDriver();
		}



		Log.info("New driver instantiated");

		driver.manage().deleteAllCookies();
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		Log.info("Window maximized and Implicit wait applied on the driver for 10 seconds");


		wait = new WebDriverWait(driver,60);
		Log.info("WebDriver wait initialized");

		utilities = new CommonUtilities();
		//dbutilities= new DataBaseUtilities();

		//Getting Testdata from the excel file
		moduleRecord=ExcelUtilities.excelSetDBRecord("Jawwy_ADM_Portal");
		//dbutilities.DatabaseConnection();


	}


	@AfterTest
	public void tearDown() throws Exception{

		driver.quit();
	}


	@Test
	@Parameters("testcasename")
	public void verify_NewLocationCreation(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Location(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Location')]", wait);
				if(ADM_Portal_HomePage.header_DefineLoction(driver).isDisplayed())
				{
					Log.info("ADM Portal Location creation page is opened.");
					System.out.println("ADM Portal Location creation page is opened.");
					
					ADM_Portal_HomePage.drpdwn_Distributor(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DistributorOption(driver).click();
					Thread.sleep(2000);
					
					ADM_Portal_HomePage.drpdwn_DealerName(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DealerNameOption(driver).click();
					Thread.sleep(2000);
					
					ADM_Portal_HomePage.txtBox_DistributorName(driver).sendKeys("Test Distributor5"); /** Change Value**/
					
					ADM_Portal_HomePage.txtBox_Longitude(driver).sendKeys("123456");
					
					ADM_Portal_HomePage.txtBox_Email(driver).sendKeys("testmail@yopmail.com");
					
					//ADM_Portal_HomePage.txtBox_Address(driver).sendKeys("testaddress");
					//Thread.sleep(2000);
					
					ADM_Portal_HomePage.drpdwn_Language(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_LanguageOption(driver).click();
					Thread.sleep(2000);
					
					ADM_Portal_HomePage.txtBox_LocationCode(driver).sendKeys("5675"); /** Change Value**/
					
					ADM_Portal_HomePage.txtBox_Latitude(driver).sendKeys("123456");
					
					ADM_Portal_HomePage.txtBox_Mobile(driver).sendKeys("966557822611");
					ADM_Portal_HomePage.txtBox_DocumentId(driver).sendKeys("112345678");
					
					ADM_Portal_HomePage.drpdwn_locationSource(driver).click();
					ADM_Portal_HomePage.drpdwn_locationSourceOption(driver).click();
			
					ADM_Portal_HomePage.button_AddLocation(driver).click();
					Thread.sleep(4000);
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("Location added successfully.");
						System.out.println("Location added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("Location not added successfully.");
						Log.warn("Location not added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Location creation page is not opened");
					Log.warn("ADM Portal Location creation page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}


	@Test
	@Parameters("testcasename")
	public void verify_NewDealerCreation(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Dealer(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Dealer')]", wait);
				if(ADM_Portal_HomePage.header_DefineDealer(driver).isDisplayed())
				{
					Log.info("ADM Portal Dealer creation page is opened.");
					System.out.println("ADM Portal Dealer creation page is opened.");
					
					ADM_Portal_HomePage.drpdwn_Distributor(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DistributorOption(driver).click();
					Thread.sleep(2000);
					
					
					ADM_Portal_HomePage.txtBox_DistributorName(driver).sendKeys("Test Dealer4"); /** Change Value**/
					ADM_Portal_HomePage.txtBox_LocationCode(driver).sendKeys("56781"); /** Change Value**/
					 
					ADM_Portal_HomePage.txtBox_Email(driver).sendKeys("testmail@yopmail.com");
					ADM_Portal_HomePage.txtBox_Mobile(driver).sendKeys("966557822611");
				
					ADM_Portal_HomePage.drpdwn_Language(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_LanguageOption(driver).click();
					Thread.sleep(2000);
									
					ADM_Portal_HomePage.txtBox_DocumentId(driver).sendKeys("112345678");
			
					ADM_Portal_HomePage.button_AddLocation(driver).click();
					Thread.sleep(4000);
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("Location added successfully.");
						System.out.println("Location added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("Location not added successfully.");
						Log.warn("Location not added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal dealer creation page is not opened");
					Log.warn("ADM Portal dealer creation page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
	
	
	@Test
	@Parameters("testcasename")
	public void verify_NewDistributorCreation(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Distributor(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Distributor')]", wait);
				if(ADM_Portal_HomePage.header_DefineDistributor(driver).isDisplayed())
				{
					Log.info("ADM Portal Distributor creation page is opened.");
					System.out.println("ADM Portal Distributor creation page is opened.");
		
					ADM_Portal_HomePage.txtBox_DistributorName(driver).sendKeys("Test Distributor_1"); /** Change Value**/
					ADM_Portal_HomePage.txtBox_LocationCode(driver).sendKeys("56785"); /** Change Value**/
					 
					ADM_Portal_HomePage.txtBox_Email(driver).sendKeys("testmail@yopmail.com");
					ADM_Portal_HomePage.txtBox_Mobile(driver).sendKeys("966557822611");
				
					ADM_Portal_HomePage.drpdwn_Language(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_LanguageOption(driver).click();
					Thread.sleep(2000);
									
					ADM_Portal_HomePage.txtBox_DocumentId(driver).sendKeys("112345678");
			
					ADM_Portal_HomePage.button_AddLocation(driver).click();
					Thread.sleep(4000);
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("Distributor added successfully.");
						System.out.println("Distributor added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("Distributor not added successfully.");
						Log.warn("Distributor not added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Distributor creation page is not opened");
					Log.warn("ADM Portal Distributor creation page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	
	@Test
	@Parameters("testcasename")
	public void verify_NewAgentCreation(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Agent(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Agent')]", wait);
				if(ADM_Portal_HomePage.header_DefineAgent(driver).isDisplayed())
				{
					Log.info("ADM Portal Agent creation page is opened.");
					System.out.println("ADM Portal Agent creation page is opened.");
					
					ADM_Portal_HomePage.drpdwn_Distributor(driver).click();
				    Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DistributorOption(driver).click();
					Thread.sleep(2000);
					
					ADM_Portal_HomePage.drpdwn_DealerName(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DealerNameOption(driver).click();
					Thread.sleep(2000);
		
					ADM_Portal_HomePage.txtBox_DistributorName(driver).sendKeys("Test Distributor_1"); /** Change Value**/
					ADM_Portal_HomePage.txtBox_LocationCode(driver).sendKeys("56785"); /** Change Value**/
					 
					
					ADM_Portal_HomePage.txtBox_Mobile(driver).sendKeys("966557822611");
				
					ADM_Portal_HomePage.drpdwn_Language(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_LanguageOption(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_AddressName(driver).click();
					Thread.sleep(4000);
					ADM_Portal_HomePage.drpdwn_AddressNameOption(driver).click();
					Thread.sleep(2000);
					
					ADM_Portal_HomePage.txtBox_DocumentId(driver).sendKeys("112345678");
								
					//ADM_Portal_HomePage.txtBox_UserName(driver).sendKeys("testuser");
					ADM_Portal_HomePage.txtBox_Password(driver).sendKeys("testpass");
					Thread.sleep(2000);
					ADM_Portal_HomePage.txtBox_ConfirmPassword(driver).sendKeys("testpass");
					Thread.sleep(2000);
					ADM_Portal_HomePage.txtBox_Email(driver).sendKeys("testmail@yopmail.com");
					Thread.sleep(4000);
					
					
					ADM_Portal_HomePage.button_AddLocation(driver).click();
					Thread.sleep(4000);
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("Agent added successfully.");
						System.out.println("Agent added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("Agent not added successfully.");
						Log.warn("Agent not added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Agent creation page is not opened");
					Log.warn("ADM Portal Distributor Agent page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}

	@Test
	@Parameters("testcasename")
	public void verify_UploadDistributorFile(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_UploadDistUsers(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Upload Distributor File')]", wait);
				if(ADM_Portal_HomePage.header_UploadDistFile(driver).isDisplayed())
				{
					Log.info("ADM Portal Upload Distribtor File page is opened.");
					System.out.println("ADM Portal Upload Distribtor File page is opened.");
					
					ADM_Portal_HomePage.link_ChooseUploadFile(driver).sendKeys(testdata.get("UploadFilePath").toString());
					Thread.sleep(2000);
					ADM_Portal_HomePage.link_Uploadfile(driver).click();
					
					if(utilities.isElementPresent(driver, "//td[@class='error' and contains(text(),'Content of uploaded file not allowed')]"))
					{
						Log.info("Error while uploading file.");
						System.out.println("Error while uploading file.");
					}
					else
					{
						System.out.println("Error while uploading file.");
						Log.warn("Error while uploading file.");
					}
					
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("File uploaded successfully.");
						System.out.println("File uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("File not uploaded successfully.");
						Log.warn("File not uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Upload Distribtor File Page is not opened.");
					Log.warn("ADM Portal Upload Distribtor File Page is not opened.");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
	
	
	@Test
	@Parameters("testcasename")
	public void verify_UploadDealerFile(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_UploadDealerUsers(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Upload Dealer File')]", wait);
				if(ADM_Portal_HomePage.header_UploadDealerFile(driver).isDisplayed())
				{
					Log.info("ADM Portal Upload Dealer File page is opened.");
					System.out.println("ADM Portal Upload Dealer File  page is opened.");
					
					ADM_Portal_HomePage.drpdwn_Distributor(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DistributorOption(driver).click();
					
					ADM_Portal_HomePage.link_ChooseUploadFile(driver).sendKeys(testdata.get("UploadFilePath").toString());
					Thread.sleep(2000);
					ADM_Portal_HomePage.link_Uploadfile(driver).click();
					
					if(utilities.isElementPresent(driver, "//td[@class='error' and contains(text(),'Content of uploaded file not allowed')]"))
					{
						Log.info("Error while uploading file.");
						System.out.println("Error while uploading file.");
					}
					else
					{
						System.out.println("Error while uploading file.");
						Log.warn("Error while uploading file.");
					}
					
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("File uploaded successfully.");
						System.out.println("File uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("File not uploaded successfully.");
						Log.warn("File not uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Upload Dealer File Page is not opened.");
					Log.warn("ADM Portal Upload Dealer File Page is not opened.");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}

	@Test
	@Parameters("testcasename")
	public void verify_UploadLocationUserFile(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_UploadLocationUsers(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Upload Dealer Shop File')]", wait);
				if(ADM_Portal_HomePage.header_UploadDealerShopFile(driver).isDisplayed())
				{
					Log.info("ADM Portal Upload Dealer Shop File page is opened.");
					System.out.println("ADM Portal Upload Dealer Shop File  page is opened.");
					
					ADM_Portal_HomePage.drpdwn_DealerShopName(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DealerShopNameOption(driver).click();
					
					ADM_Portal_HomePage.link_ChooseUploadFile(driver).sendKeys(testdata.get("UploadFilePath").toString());
					Thread.sleep(2000);
					ADM_Portal_HomePage.link_Uploadfile(driver).click();
					
					if(utilities.isElementPresent(driver, "//td[@class='error' and contains(text(),'Content of uploaded file not allowed')]"))
					{
						Log.info("Error while uploading file.");
						System.out.println("Error while uploading file.");
					}
					else
					{
						System.out.println("Error while uploading file.");
						Log.warn("Error while uploading file.");
					}
					
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("File uploaded successfully.");
						System.out.println("File uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("File not uploaded successfully.");
						Log.warn("File not uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Upload Dealer Shop File Page is not opened.");
					Log.warn("ADM Portal Upload Dealer Shop File Page is not opened.");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
	
	@Test
	@Parameters("testcasename")
	public void verify_UploadAgentUserFile(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_UploadAgentUsers(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Upload agent File')]", wait);
				if(ADM_Portal_HomePage.header_UploadAgentFile(driver).isDisplayed())
				{
					Log.info("ADM Portal Upload Agent File page is opened.");
					System.out.println("ADM Portal Upload Agent File page is opened.");
					
					ADM_Portal_HomePage.drpdwn_AgentDealerShopName(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_AgentDealerShopNameOption(driver).click();
					
					ADM_Portal_HomePage.link_ChooseUploadFile(driver).sendKeys(testdata.get("UploadFilePath").toString());
					Thread.sleep(2000);
					ADM_Portal_HomePage.link_Uploadfile(driver).click();
					
					if(utilities.isElementPresent(driver, "//td[@class='error' and contains(text(),'Content of uploaded file not allowed')]"))
					{
						Log.info("Error while uploading file.");
						System.out.println("Error while uploading file.");
					}
					else
					{
						System.out.println("Error while uploading file.");
						Log.warn("Error while uploading file.");
					}
					
					
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("File uploaded successfully.");
						System.out.println("File uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("File not uploaded successfully.");
						Log.warn("File not uploaded successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Upload Agent File Page is not opened.");
					Log.warn("ADM Portal Upload Agent File Page is not opened.");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
     
	@Test
	@Parameters("testcasename")
	public void verify_ViewLocationListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Location(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Location')]", wait);
				if(ADM_Portal_HomePage.header_DefineLoction(driver).isDisplayed())
				{
					Log.info("ADM Portal Location creation page is opened.");
					System.out.println("ADM Portal Location creation page is opened.");
					
					 if(ADM_Portal_HomePage.col_Name(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_NameFilter(driver).sendKeys(testdata.get("Name").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Name Filter coloumn is not present.");
							Log.warn("Name Filter coloumn is not present.");
							
					    }
					    if(ADM_Portal_HomePage.col_AccountCode(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_AccountCodeFilter(driver).sendKeys(testdata.get("AccountCode").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_AccountCodeFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_AccountCodeFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("AccountCode Filter coloumn is not present.");
							Log.warn("AccountCode Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_ParentName(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_ParentNameFilter(driver).sendKeys(testdata.get("ParentName").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_ParentNameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_ParentNameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("ParentName Filter coloumn is not present.");
							Log.warn("ParentName Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_Mobile(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_MobileFilter(driver).sendKeys(testdata.get("Mobile").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_MobileFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_MobileFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Mobile Filter coloumn is not present.");
							Log.warn("Mobile Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_DocumentID(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_DocumentIDFilter(driver).sendKeys(testdata.get("DocumentID").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_DocumentIDFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_DocumentIDFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("DocumentID Filter coloumn is not present.");
							Log.warn("DocumentID Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_Email(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_EmailFilter(driver).sendKeys(testdata.get("Email").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_EmailFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_EmailFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Email Filter coloumn is not present.");
							Log.warn("Email Filter coloumn is not present.");
					    }
				    ADM_Portal_HomePage.col_Update(driver).isDisplayed();
				    ADM_Portal_HomePage.col_Activate_Deactivate(driver).isDisplayed();
				    ADM_Portal_HomePage.button_Logout(driver).click();
				    Thread.sleep(2000);
					
				}
				else
				{
					System.out.println("ADM Portal Location creation page is not opened");
					Log.warn("ADM Portal Location creation page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
  
	@Test
	@Parameters("testcasename")
	public void verify_ViewDistributorListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Distributor(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Distributor')]", wait);
				if(ADM_Portal_HomePage.header_DefineDistributor(driver).isDisplayed())
				{
					Log.info("ADM Portal Distributor creation page is opened.");
					System.out.println("ADM Portal Distributor creation page is opened.");
		
					 if(ADM_Portal_HomePage.col_Name(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_NameFilter(driver).sendKeys(testdata.get("Name").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Name Filter coloumn is not present.");
							Log.warn("Name Filter coloumn is not present.");
							
					    }
					    if(ADM_Portal_HomePage.col_AccountCode(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_AccountCodeFilter(driver).sendKeys(testdata.get("AccountCode").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_AccountCodeFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_AccountCodeFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("AccountCode Filter coloumn is not present.");
							Log.warn("AccountCode Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_ParentName(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_ParentNameFilter(driver).sendKeys(testdata.get("ParentName").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_ParentNameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_ParentNameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("ParentName Filter coloumn is not present.");
							Log.warn("ParentName Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_Mobile(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_MobileFilter(driver).sendKeys(testdata.get("Mobile").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_MobileFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_MobileFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Mobile Filter coloumn is not present.");
							Log.warn("Mobile Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_DocumentID(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_DocumentIDFilter(driver).sendKeys(testdata.get("DocumentID").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_DocumentIDFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_DocumentIDFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("DocumentID Filter coloumn is not present.");
							Log.warn("DocumentID Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_Email(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_EmailFilter(driver).sendKeys(testdata.get("Email").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_EmailFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_EmailFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Email Filter coloumn is not present.");
							Log.warn("Email Filter coloumn is not present.");
					    }
					    ADM_Portal_HomePage.col_Update(driver).isDisplayed();
					    ADM_Portal_HomePage.col_Activate_Deactivate(driver).isDisplayed();
					    ADM_Portal_HomePage.button_Logout(driver).click();
					    Thread.sleep(2000);
				}
				else
				{
					System.out.println("ADM Portal Distributor creation page is not opened");
					Log.warn("ADM Portal Distributor creation page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_ViewDealerListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Dealer(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Dealer')]", wait);
				if(ADM_Portal_HomePage.header_DefineDealer(driver).isDisplayed())
				{
					Log.info("ADM Portal Dealer creation page is opened.");
					System.out.println("ADM Portal Dealer creation page is opened.");
		
					 if(ADM_Portal_HomePage.col_Name(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_NameFilter(driver).sendKeys(testdata.get("Name").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Name Filter coloumn is not present.");
							Log.warn("Name Filter coloumn is not present.");
							
					    }
					    if(ADM_Portal_HomePage.col_AccountCode(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_AccountCodeFilter(driver).sendKeys(testdata.get("AccountCode").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_AccountCodeFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_AccountCodeFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("AccountCode Filter coloumn is not present.");
							Log.warn("AccountCode Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_ParentName(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_ParentNameFilter(driver).sendKeys(testdata.get("ParentName").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_ParentNameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_ParentNameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("ParentName Filter coloumn is not present.");
							Log.warn("ParentName Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_Mobile(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_MobileFilter(driver).sendKeys(testdata.get("Mobile").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_MobileFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_MobileFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Mobile Filter coloumn is not present.");
							Log.warn("Mobile Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_DocumentID(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_DocumentIDFilter(driver).sendKeys(testdata.get("DocumentID").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_DocumentIDFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_DocumentIDFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("DocumentID Filter coloumn is not present.");
							Log.warn("DocumentID Filter coloumn is not present.");
					    }
					    if(ADM_Portal_HomePage.col_Email(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_EmailFilter(driver).sendKeys(testdata.get("Email").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_EmailFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_EmailFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Email Filter coloumn is not present.");
							Log.warn("Email Filter coloumn is not present.");
					    }
					    ADM_Portal_HomePage.col_Update(driver).isDisplayed();
					    ADM_Portal_HomePage.col_Activate_Deactivate(driver).isDisplayed();
					    ADM_Portal_HomePage.button_Logout(driver).click();
					    Thread.sleep(2000);
				}
				else
				{
					System.out.println("ADM Portal Dealer creation page is not opened");
					Log.warn("ADM Portal Dealer creation page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_ViewAgentListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_ADM_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_Agent(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Define Agent')]", wait);
				if(ADM_Portal_HomePage.header_DefineAgent(driver).isDisplayed())
				{
					Log.info("ADM Portal Agent creation page is opened.");
					System.out.println("ADM Portal Agent creation page is opened.");
					
					ADM_Portal_HomePage.icon_PlusIcon(driver).click();
		
					 if(ADM_Portal_HomePage.col_UserName(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_UserNameFilter(driver).sendKeys(testdata.get("Name").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_UserNameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_UserNameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("UserName Filter coloumn is not present.");
							Log.warn("UserName Filter coloumn is not present.");
							
					    }
					   
					    if(ADM_Portal_HomePage.col_ParentName(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_ParentNameAgentFilter(driver).sendKeys(testdata.get("ParentName").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_ParentNameAgentFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_ParentNameAgentFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("ParentName Filter coloumn is not present.");
							Log.warn("ParentName Filter coloumn is not present.");
					    }
					    
					    if(ADM_Portal_HomePage.col_ContactName(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_ContactNameFilter(driver).sendKeys(testdata.get("ContactName").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_ContactNameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_ContactNameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("ContactName Filter coloumn is not present.");
							Log.warn("ContactName Filter coloumn is not present.");
					    }
					    
					    ADM_Portal_HomePage.col_HasWebAccess(driver).isDisplayed();
					    ADM_Portal_HomePage.col_AgentActivate_Deactivate(driver).isDisplayed();
					    ADM_Portal_HomePage.button_Logout(driver).click();
					    Thread.sleep(2000);
				}
				else
				{
					System.out.println("ADM Portal Agent creation page is not opened");
					Log.warn("ADM Portal Agent creation page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_NewCommissionCreation(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Commission_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_Commission(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Commission')]", wait);
				if(ADM_Portal_HomePage.header_AddCommission(driver).isDisplayed())
				{
					Log.info("ADM Portal Add Commission page is opened.");
					System.out.println("ADM Portal Add Commission page is opened.");
										
					ADM_Portal_HomePage.txtBox_CommsionCategory(driver).sendKeys("Test Category Commission1"); 
					ADM_Portal_HomePage.txtBox_CommissionDescp(driver).sendKeys("Test Category Commission1 Description"); 
					ADM_Portal_HomePage.txtBox_CommissionCode(driver).sendKeys("5525"); /** Change Value**/
					
					ADM_Portal_HomePage.button_AddLocation(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.button_SaveAndExit(driver).click();
					Thread.sleep(2000);
							
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("Commission Category added successfully.");
						System.out.println("Commission Category added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("Commission Category not added successfully.");
						Log.warn("Commission Category not added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Add Commission page is not opened");
					Log.warn("ADM Portal Add Commission page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
	
	@Test
	@Parameters("testcasename")
	public void verify_ViewCommissionListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Commission_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_Commission(driver).click();
				Thread.sleep(2000);
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Commission')]", wait);
				if(ADM_Portal_HomePage.header_AddCommission(driver).isDisplayed())
				{
					Log.info("ADM Portal Commission list page is opened.");
					System.out.println("ADM Portal Commission list page is opened.");
		
					 if(ADM_Portal_HomePage.col_Commission_Category(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).sendKeys(testdata.get("Commission_Cat").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Commission_Category Filter coloumn is not present.");
							Log.warn("Commission_Category Filter coloumn is not present.");
							
					    }
					   
					    if(ADM_Portal_HomePage.col_Commission_Description(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_Commission_Descriptionfilter(driver).sendKeys(testdata.get("CommissionDescp").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_Commission_Descriptionfilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_Commission_Descriptionfilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Commission_Description Filter coloumn is not present.");
							Log.warn("Commission_Description Filter coloumn is not present.");
					    }
					    
					    if(ADM_Portal_HomePage.col_Commission_Code(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_Commission_Codefilter(driver).sendKeys("5525");
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_Commission_Codefilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_Commission_Codefilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Commission_Code Filter coloumn is not present.");
							Log.warn("Commission_Code Filter coloumn is not present.");
					    }
					    
					    ADM_Portal_HomePage.col_Update(driver).isDisplayed();
					    ADM_Portal_HomePage.col_Delete(driver).isDisplayed();
					    ADM_Portal_HomePage.col_CommissionConfig(driver).isDisplayed();
					    ADM_Portal_HomePage.button_Logout(driver).click();
					    Thread.sleep(2000);
				}
				else
				{
					System.out.println("ADM Portal Commission list page is not opened");
					Log.warn("ADM Portal Commission list page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_ViewCommissionConfigListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Commission_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_Commission(driver).click();
				Thread.sleep(2000);
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Commission')]", wait);
				if(ADM_Portal_HomePage.header_AddCommission(driver).isDisplayed())
				{
					Log.info("ADM Portal Commission list page is opened.");
					System.out.println("ADM Portal Commission list page is opened.");
		
					 if(ADM_Portal_HomePage.col_Commission_Category(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).sendKeys(testdata.get("Commission_Cat").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).clear();
					    		ADM_Portal_HomePage.link_Commission_Config(driver).click();
					    		
					    		utilities.explicitilyWaitFor("//legend[contains(text(),'Commission Category')]", wait);
					    		
					    		if(ADM_Portal_HomePage.header_CommissionCategory(driver).isDisplayed())
					    		{
					    			Log.info("ADM Portal CommissionCategory list page is opened.");
									System.out.println("ADM Portal CommissionCategory list page is opened.");
									ADM_Portal_HomePage.col_Type(driver).isDisplayed();
									ADM_Portal_HomePage.col_Brand(driver).isDisplayed();
									ADM_Portal_HomePage.col_FromPrice(driver).isDisplayed();
									ADM_Portal_HomePage.col_ToPrice(driver).isDisplayed();
									ADM_Portal_HomePage.col_CommissionValue(driver).isDisplayed();
									ADM_Portal_HomePage.col_SKU(driver).isDisplayed();
									ADM_Portal_HomePage.col_Update(driver).isDisplayed();
									ADM_Portal_HomePage.col_Delete(driver).isDisplayed();
					    		}
					    		else
					    		{
					    			Log.warn("ADM Portal CommissionCategory list page is not opened.");
									System.out.println("ADM Portal CommissionCategory list page is not opened.");
									Assert.assertTrue(false);
					    		}
					    		
					    		
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
								Assert.assertTrue(false);
					    	}
					    }
					    else
					    {
					    	System.out.println("Commission_Category Filter coloumn is not present.");
							Log.warn("Commission_Category Filter coloumn is not present.");
							Assert.assertTrue(false);
							
					    }
					   
					   
					    //ADM_Portal_HomePage.col_Update(driver).isDisplayed();
					    //ADM_Portal_HomePage.col_Delete(driver).isDisplayed();
					    ADM_Portal_HomePage.button_Logout(driver).click();
					    Thread.sleep(2000);
				}
				else
				{
					System.out.println("ADM Portal Commission list page is not opened");
					Log.warn("ADM Portal Commission list page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_AddCommissionConfig(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Commission_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_Commission(driver).click();
				Thread.sleep(2000);
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Commission')]", wait);
				if(ADM_Portal_HomePage.header_AddCommission(driver).isDisplayed())
				{
					Log.info("ADM Portal Commission list page is opened.");
					System.out.println("ADM Portal Commission list page is opened.");
		
					 if(ADM_Portal_HomePage.col_Commission_Category(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).sendKeys(testdata.get("Commission_Cat").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).clear();
					    		ADM_Portal_HomePage.link_Commission_Config(driver).click();
					    		
					    		utilities.explicitilyWaitFor("//legend[contains(text(),'Commission Category')]", wait);
					    		
					    		if(ADM_Portal_HomePage.header_CommissionCategory(driver).isDisplayed())
					    		{
					    			Log.info("ADM Portal CommissionCategory list page is opened.");
									System.out.println("ADM Portal CommissionCategory list page is opened.");
									
									utilities.scrollIntoView(driver, "//div[@id='frm1:commissionBrand']");
									ADM_Portal_HomePage.drpdwn_Type(driver).click();
									Thread.sleep(2000);
									ADM_Portal_HomePage.drpdwn_TypeOption(driver).click();
									Thread.sleep(2000);
									ADM_Portal_HomePage.drpdwn_Brand(driver).click();
									Thread.sleep(2000);
									ADM_Portal_HomePage.drpdwn_BrandOption(driver).click();
									
									ADM_Portal_HomePage.txtBox_FromPrice(driver).sendKeys("0");
									ADM_Portal_HomePage.txtBox_ToPrice(driver).sendKeys("500");
									ADM_Portal_HomePage.txtBox_CommissionValue(driver).sendKeys("4");
									
									ADM_Portal_HomePage.button_AddCommissionConfig(driver).click();
									Thread.sleep(2000);
									
									if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
									{
										Log.info("Commission Config added successfully.");
										System.out.println("Commission Config added successfully.");
										ADM_Portal_HomePage.button_Logout(driver).click();
										Thread.sleep(2000);
									}
									else
									{
										System.out.println("Commission Config not added successfully.");
										Log.warn("Commission Config not added successfully.");
										ADM_Portal_HomePage.button_Logout(driver).click();
										Thread.sleep(2000);
										Assert.assertTrue(false);
									}
									
					    		}
					    		else
					    		{
					    			Log.warn("ADM Portal CommissionCategory list page is not opened.");
									System.out.println("ADM Portal CommissionCategory list page is not opened.");
									Assert.assertTrue(false);
					    		}
					    		
					    		
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_Commission_Categoryfilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
								Assert.assertTrue(false);
					    	}
					    }
					    else
					    {
					    	System.out.println("Commission_Category Filter coloumn is not present.");
							Log.warn("Commission_Category Filter coloumn is not present.");
							Assert.assertTrue(false);
							
					    }
					   
					  
				}
				else
				{
					System.out.println("ADM Portal Commission list page is not opened");
					Log.warn("ADM Portal Commission list page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_CommissionReportDownload(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Commission_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_CommissionReport(driver).click();
				Thread.sleep(2000);
				utilities.explicitilyWaitFor("//span[@class='ui-panel-title' and contains(text(),'Commission Report')]", wait);
				if(ADM_Portal_HomePage.header_CommissionReport(driver).isDisplayed())
				{
					Log.info("ADM Portal Commission Report page is opened.");
					System.out.println("ADM Portal Commission Report page is opened.");
					
					ADM_Portal_HomePage.drpdwn_DistributorName(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_DistributorNameOption(driver).click();
		            
					ADM_Portal_HomePage.drpdwn_ReportTemplate(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_ReportTemplateOption(driver).click();
					Thread.sleep(2000);
					
					ADM_Portal_HomePage.button_ExportReport(driver).click();
					Thread.sleep(2000);
					utilities.explicitilyWaitFor("//img[@id='form:j_idt159']", wait);
					ADM_Portal_HomePage.button_ExportReportExcel(driver).click();
					Thread.sleep(2000);
					
					  
				}
				else
				{
					System.out.println("ADM Portal Commission Report page is not opened");
					Log.warn("ADM Portal Commission Report page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_NewAddressCreation(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Settings_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_DefineAddress(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Address')]", wait);
				if(ADM_Portal_HomePage.header_AddAddress(driver).isDisplayed())
				{
					Log.info("ADM Portal Add Address page is opened.");
					System.out.println("ADM Portal Add Address page is opened.");
										
					ADM_Portal_HomePage.txtBox_AddressName(driver).sendKeys(testdata.get("Name").toString()); 
					ADM_Portal_HomePage.txtBox_City(driver).sendKeys(testdata.get("City").toString()); 
					ADM_Portal_HomePage.txtBox_Street(driver).sendKeys(testdata.get("Street").toString()); /** Change Value**/
					
					ADM_Portal_HomePage.drpdwn_Region(driver).click();
					Thread.sleep(2000);
					ADM_Portal_HomePage.drpdwn_RegionOption(driver).click();
					
					ADM_Portal_HomePage.button_AddLocation(driver).click();
					Thread.sleep(2000);
							
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("Address added successfully.");
						System.out.println("Address added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("Address not added successfully.");
						Log.warn("Address not added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Add Address page is not opened");
					Log.warn("ADM Portal Add Address page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_ViewAddressListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Settings_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_DefineAddress(driver).click();
				Thread.sleep(2000);
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Address')]", wait);
				if(ADM_Portal_HomePage.header_AddAddress(driver).isDisplayed())
				{
					Log.info("ADM Portal Address list page is opened.");
					System.out.println("ADM Portal Address list page is opened.");
		
					 if(ADM_Portal_HomePage.col_AddressName(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_NameFilter(driver).sendKeys(testdata.get("Name").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_NameFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Address Name Filter coloumn is not present.");
							Log.warn("Address Name Filter coloumn is not present.");
							
					    }
					   
					    if(ADM_Portal_HomePage.col_City(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_Cityfilter(driver).sendKeys(testdata.get("City").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_Cityfilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_Cityfilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("City Filter coloumn is not present.");
							Log.warn("City Filter coloumn is not present.");
					    }
					    
					    if(ADM_Portal_HomePage.col_Street(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_StreetFilter(driver).sendKeys(testdata.get("Street").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_StreetFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_StreetFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Street Filter coloumn is not present.");
							Log.warn("Street Filter coloumn is not present.");
					    }
					    
					    if(ADM_Portal_HomePage.col_Region(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_Regionfilter(driver).sendKeys(testdata.get("Region").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_Regionfilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_Regionfilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("Region Filter coloumn is not present.");
							Log.warn("Region Filter coloumn is not present.");
					    }
					    
					    
					    
					    ADM_Portal_HomePage.col_Update(driver).isDisplayed();
					    ADM_Portal_HomePage.col_Delete(driver).isDisplayed();
					    ADM_Portal_HomePage.button_Logout(driver).click();
					    Thread.sleep(2000);
				}
				else
				{
					System.out.println("ADM Portal Address list page is not opened");
					Log.warn("ADM Portal Address list page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_NewWarningMessageCreation(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Settings_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_DefineWarningMessage(driver).click();
				
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Warning Message')]", wait);
				if(ADM_Portal_HomePage.header_AddWarningMessage(driver).isDisplayed())
				{
					Log.info("ADM Portal Add Warning page is opened.");
					System.out.println("ADM Portal Add Warning page is opened.");
										
					ADM_Portal_HomePage.txtBox_RuleID(driver).sendKeys(testdata.get("RuleID").toString()); /** Change Value**/
					ADM_Portal_HomePage.txtBox_MessageEnglish(driver).sendKeys(testdata.get("Message_Eng").toString()); 
					ADM_Portal_HomePage.txtBox_MessageArabic(driver).sendKeys(testdata.get("Message_Arb").toString()); 
					
					ADM_Portal_HomePage.button_AddLocation(driver).click();
					Thread.sleep(2000);
							
					if(utilities.isElementPresent(driver, "//div[@class='ui-growl-message' ]/span[contains(text(),'Added')]"))
					{
						Log.info("Address added successfully.");
						System.out.println("Address added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
					}
					else
					{
						System.out.println("Address not added successfully.");
						Log.warn("Address not added successfully.");
						ADM_Portal_HomePage.button_Logout(driver).click();
						Thread.sleep(2000);
						Assert.assertTrue(false);
					}
					
					
				}
				else
				{
					System.out.println("ADM Portal Add Warning page is not opened");
					Log.warn("ADM Portal Add Warning page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
    
	@Test
	@Parameters("testcasename")
	public void verify_ViewWarningsListSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Settings_Hierarchy(driver).click();
				ADM_Portal_HomePage.link_DefineWarningMessage(driver).click();
				Thread.sleep(2000);
				utilities.explicitilyWaitFor("//legend[contains(text(),'Add Warning Message')]", wait);
				if(ADM_Portal_HomePage.header_AddWarningMessage(driver).isDisplayed())
				{
					Log.info("ADM Portal Warning Message list page is opened.");
					System.out.println("ADM Portal Warning Message list page is opened.");
		
					 if(ADM_Portal_HomePage.col_RuleID(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_RuleIdFilter(driver).sendKeys(testdata.get("RuleID").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_RuleIdFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   
					    		ADM_Portal_HomePage.col_RuleIdFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("RuleId Filter coloumn is not present.");
							Log.warn("RuleId Filter coloumn is not present.");
							
					    }
					   
					    if(ADM_Portal_HomePage.col_MesageEng(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_MsgEngFilter(driver).sendKeys(testdata.get("Message_Eng").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_MsgEngFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_MsgEngFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("MesageEng Filter coloumn is not present.");
							Log.warn("MesageEng Filter coloumn is not present.");
					    }
					    
					    if(ADM_Portal_HomePage.col_MessageArb(driver).isDisplayed())
					    {
					    	ADM_Portal_HomePage.col_MessageArbFilter(driver).sendKeys(testdata.get("Message_Arb").toString());
					    	Thread.sleep(2000);
					    	if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
					    	{ 
					    		ADM_Portal_HomePage.col_MessageArbFilter(driver).clear();
					    		System.out.println("Data found.");
								Log.warn("Data found.");
					    	}
					    	else
					    	{   ADM_Portal_HomePage.col_MessageArbFilter(driver).clear();
					    		System.out.println("Data Not found.");
								Log.warn("Data Not found.");
					    	}
					    }
					    else
					    {
					    	System.out.println("MessageArb Filter coloumn is not present.");
							Log.warn("MessageArb Filter coloumn is not present.");
					    }
					    
					    ADM_Portal_HomePage.col_Update(driver).isDisplayed();
					    ADM_Portal_HomePage.col_Delete(driver).isDisplayed();
					    ADM_Portal_HomePage.button_Logout(driver).click();
					    Thread.sleep(2000);
				}
				else
				{
					System.out.println("ADM Portal Warning Message list page is not opened.");
					Log.warn("ADM Portal Warning Message list  page is not opened.");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}

	@Test
	@Parameters("testcasename")
	public void verify_AgentLocationStockSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				ADM_Portal_HomePage.link_Locations_Heirarchy(driver).click();
				ADM_Portal_HomePage.link_LocationStock(driver).click();
				
				utilities.explicitilyWaitFor("//span[@class='ui-panel-title' and text()='Select Location']", wait);
				if(ADM_Portal_HomePage.header_SelectLocation(driver).isDisplayed())
				{
					Log.info("ADM Portal Location Stock page is opened.");
					System.out.println("ADM Portal Location Stock page is opened.");
					 
				    ADM_Portal_HomePage.drpdwn_Location(driver).click();
				    Thread.sleep(2000);
				    ADM_Portal_HomePage.drpdwn_LocationOption(driver).click();
				    ADM_Portal_HomePage.col_VendorSKU(driver).isDisplayed();
				    ADM_Portal_HomePage.col_Title(driver).isDisplayed();
				    ADM_Portal_HomePage.col_Quantity(driver).isDisplayed();
				    
				    if(!utilities.isElementPresent(driver, "//tr[@class='ui-widget-content ui-datatable-empty-message']/td/div[contains(text(),'No Data Found')]"))
			    	{ 
			    		
			    		System.out.println("Data found.");
						Log.warn("Data found.");
						Thread.sleep(4000);
			    	}
			    	else
			    	{   
			    		
			    		System.out.println("Data Not found.");
						Log.warn("Data Not found.");
						Thread.sleep(4000);
			    	}
				    
				    ADM_Portal_HomePage.button_Logout(driver).click();
				    Thread.sleep(2000);
					
				}
				else
				{
					System.out.println("ADM Portal Location Stock page is not opened");
					Log.warn("ADM Portal Location Stock page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}
   
	
	@Test
	@Parameters("testcasename")
	public void verify_AgentLocationOrderSearch(String testcasename) throws Exception{

		try
		{
			System.out.println("Getting testdata for testcase:"+testcasename);


			Map testdata = ExcelUtilities.getTestData(testcasename);

			Log.startTestCase(testcasename);

			utilities.appADMPortal_Login(driver,wait,testdata.get("URL").toString(),testdata.get("UserName").toString(),testdata.get("Password").toString());

			if(driver.findElements(By.xpath("//span[@class='ui-menuitem-icon ui-icon menu-home-icon']")).size()>0)
			{

				Log.info("ADM Portal HomePage is opened.");
				System.out.println("ADM Portal HomePage is opened.");
				
				
				if(ADM_Portal_HomePage.header_LocationList(driver).isDisplayed())
				{
					Log.info("ADM Portal Location List page is opened.");
					System.out.println("ADM Portal Location List page is opened.");
					int count=0; 
				    int flag=0;
					if(ADM_Portal_HomePage.text_AllLocationNames(driver).size()>0)
					{
						for(WebElement locname:ADM_Portal_HomePage.text_AllLocationNames(driver))
						{   
							System.out.println("Location name="+locname);
							if(locname.equals("Location2"))
							{   
								flag=1;
								Log.info("Location name found in the Location List page.");
								System.out.println("Location name found in the Location List page.");
								driver.findElement(By.xpath("//tr[@data-ri='"+count+"']/td[4]/div/a")).click();
								Thread.sleep(4000);
								break;
							}
							else
							{
								count++;
							}
						}
						
						if(flag==0)
						{
							Log.info("Location name not found in the Location List page.");
							System.out.println("Location name not found in the Location List page.");
						}
					}
					
				    //ADM_Portal_HomePage.drpdwn_LocationOption(driver).click();
				    //ADM_Portal_HomePage.col_VendorSKU(driver).isDisplayed();
				   // ADM_Portal_HomePage.col_Title(driver).isDisplayed();
				   // ADM_Portal_HomePage.col_Quantity(driver).isDisplayed();
				    				    
				    ADM_Portal_HomePage.button_Logout(driver).click();
				    Thread.sleep(2000);
					
				}
				else
				{
					System.out.println("ADM Portal Location List page is not opened");
					Log.warn("ADM Portal Location List page is not opened");
					Assert.assertTrue(false);
				}
				
				
                
			}

			else
			{
				System.out.println("ADM Portal HomePage is not opened");
				Log.warn("ADM Portal HomePage is not opened");
				Assert.assertTrue(false);

			} 	

			Log.endTestCase(testcasename);

		}


		catch(Exception e)
		{
			System.out.println("Exception Occured:"+e);
			Log.error(e.getMessage());
			Assert.assertTrue(false);
		}


	}

}
